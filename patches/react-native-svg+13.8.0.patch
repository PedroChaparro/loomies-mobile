diff --git a/node_modules/react-native-svg/src/xml.tsx b/node_modules/react-native-svg/src/xml.tsx
index 74da30f..84002ab 100644
--- a/node_modules/react-native-svg/src/xml.tsx
+++ b/node_modules/react-native-svg/src/xml.tsx
@@ -1,5 +1,5 @@
 import type { ComponentType } from 'react';
-import React, { Component, useEffect, useMemo, useState } from 'react';
+import React, { Component, useEffect, useMemo, useState, forwardRef } from 'react';
 import Rect from './elements/Rect';
 import Circle from './elements/Circle';
 import Ellipse from './elements/Ellipse';
@@ -91,21 +91,21 @@ export type XmlState = { ast: JsxAST | null };
 
 export type AstProps = SvgProps & { ast: JsxAST | null } & AdditionalProps;
 
-export function SvgAst({ ast, override }: AstProps) {
+export const SvgAst = forwardRef<Svg, AstProps>(({ ast, override }: AstProps, ref) => {
   if (!ast) {
     return null;
   }
   const { props, children } = ast;
   return (
-    <Svg {...props} {...override}>
+    <Svg {...props} {...override} ref={ref} >
       {children}
     </Svg>
   );
-}
+});
 
 export const err = console.error.bind(console);
 
-export function SvgXml(props: XmlProps) {
+export const SvgXml = forwardRef<Svg, XmlProps>((props: XmlProps, ref) => {
   const { onError = err, xml, override } = props;
   const ast = useMemo<JsxAST | null>(
     () => (xml !== null ? parse(xml) : null),
@@ -113,12 +113,12 @@ export function SvgXml(props: XmlProps) {
   );
 
   try {
-    return <SvgAst ast={ast} override={override || props} />;
+    return <SvgAst ast={ast} override={override || props} ref={ref} />;
   } catch (error) {
     onError(error);
     return null;
   }
-}
+});
 
 export async function fetchText(uri: string) {
   const response = await fetch(uri);
