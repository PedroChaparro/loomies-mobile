name: Continuous Deployment

on:
  # Create a new release when a tag is pushed
  push:
    tags:
      - 'v*' # Match tags starting with v*: v1.0, v20.15.10

jobs:
  deploy:
    runs-on: ubuntu-22.04

    steps:
      # -- Setup the environment
      - name: Checkout and Authenticate
        uses: actions/checkout@v3

      - name: Setup JDK
        uses: actions/setup-java@v2
        with:
          distribution: 'zulu'
          java-version: 11

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Restore node_modules cache
        uses: actions/cache@v2
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install yarn dependencies
        run: yarn install --from-lock-file

      # -- Prepare Gradle for Android
      - name: Cache Gradle Wrapper
        uses: actions/cache@v2
        with:
          path: ~/.gradle/wrapper
          key:
            ${{ runner.os }}-gradle-wrapper-${{
            hashFiles('gradle/wrapper/gradle-wrapper.properties') }}

      - name: Cache Gradle Dependencies
        uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key:
            ${{ runner.os }}-gradle-caches-${{
            hashFiles('gradle/wrapper/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-caches-

      - name: Make Gradle executable
        run: cd android && chmod +x ./gradlew

      # -- Build and sign the Android app
      - name: Build Android
        run: |
          cd android
          API_URL=${{ secrets.DEPLOYMENT_API_URL }}
          MAP_DEBUG=false
          GAME_MIN_REQUIRED_EXPERIENCE=100
          GAME_EXPERIENCE_FACTOR=1000
          PLAYER_REACH_RADIUS=0.0008
          ./gradlew assembleRelease --no-daemon

      - name: Sign Android
        id: sign_app
        uses: r0adkll/sign-android-release@v1
        with:
          releaseDirectory: android/app/build/outputs/apk/release
          signingKeyBase64: ${{ secrets.ANDROID_KEY_BASE64 }}
          alias: ${{ secrets.ANDROID_ALIAS }}
          keyStorePassword: ${{ secrets.ANDROID_KEY_STORE_PASSWORD }}
          keyPassword: ${{ secrets.ANDROID_KEY_PASSWORD }}

      # -- Create a new release and upload the signed APK
      - name: Create new release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: |
            Changes in this Release
            - ${{ github.event.release.body }}
          draft: false
          prerelease: false

      - name: Upload release artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ steps.sign_app.outputs.signedReleaseFile }}
          asset_name: Loomies.apk
          asset_content_type: application/vnd.android.package-archive
